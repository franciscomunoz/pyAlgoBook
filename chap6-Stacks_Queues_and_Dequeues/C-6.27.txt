Suppose you have a Stack containing n elements and a queue Q that is initially
empty. Describe how you can use Q to scan S to see if it contains a certain 
element x, with the aditional constraint that your algorithm must returns the
elements back to S in their original order. You may only use S and Q, and a
constant  number of other variables.

Solution :

find_element(number)
    count = 0
    while not self.S.isEmpty()
        val = self.S.pop()
        count += 1
        if val != number
            self.Q.enqueue(val)
        else
            print("The number was found")
            break


    
    while count >= 1 
        self.Q.enqueue(self.Q.dequeue()) 
        count -= 1

    while not self.Q.isEmpty()
        self.Q.push(self.Q.dequeue())

        
    
