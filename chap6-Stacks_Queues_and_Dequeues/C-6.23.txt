Suppose you have three nonempty stacks R,S and T. Describe a sequence of 
operations that results in S storing all elements originally in T below all of 
S's original elements, with both sets of those elements in their original order.
The final configuration for R should be the same as its original configuration.

For example : if R = [1,2,3], S = [4,5] and T = [6,7,8,9], the final configuration
should have R = [1,2,3] S = [6,7,8,9,4,5]

Solution :
count = 0
while S not empty
    R.push(S.pop())
    count ++
while T not empty
    R.push(T.pop())
    count ++

while count != 0
    S.push(R.pop())
    

