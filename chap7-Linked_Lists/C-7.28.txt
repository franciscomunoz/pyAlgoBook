Describe a recursive algorithm for reversing a single linked list

Recurse until we arrive to the end and start repointing next


reverse(list, node, n):

    if node._next == None:
        list._head = node
        return node
    else:
        n++
        reverse(list, node._next, n )._next = node
        n--
        if n  == 0:
            node._next = None
            list._tail = node
        return

        
